{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://dashscope-chatbot/webpack/bootstrap","webpack://dashscope-chatbot/webpack/runtime/make namespace object","webpack://dashscope-chatbot/./src/script.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Access environment variables in client-side JS through webpack\n// These will be injected at build time\n\n// Session check at the start of the file\nfunction checkSession() {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    \n    if (!token || !user) {\n        window.location.href = 'account.html';\n        return false;\n    }\n    return true;\n}\n\n// Run session check immediately\nif (!checkSession()) {\n    // Stop further script execution if not authenticated\n    throw new Error('Not authenticated');\n}\n\n// Global variables\nlet conversations = [];\nlet currentConversationId = null;\n\n// Function to ensure a URL is properly formatted\nfunction formatUrl(url, defaultPort = 5101) {\n    // Determine the base URL based on where the app is running\n    const hostname = window.location.hostname;\n    \n    // Default API endpoint path\n    const apiEndpoint = '/api/chat';\n    \n    // Dynamic base URL determination\n    let baseUrl;\n    \n    if (hostname === 'baktipm.com') {\n        // We're running on the production domain\n        baseUrl = 'https://baktipm.com';\n        console.log('Running on baktipm.com domain, using:', baseUrl + apiEndpoint);\n        return baseUrl + apiEndpoint;\n    } else if (hostname === 'localhost' || hostname === '127.0.0.1') {\n        // We're running locally\n        baseUrl = `http://localhost:${defaultPort}`;\n        console.log('Running locally, using:', baseUrl + apiEndpoint);\n        return baseUrl + apiEndpoint;\n    }\n    \n    // If we got here, we're using a custom URL provided as an argument\n    if (!url) return `http://localhost:${defaultPort}/api/chat`;\n    \n    // Make sure URL has protocol\n    let formattedUrl = url;\n    if (!formattedUrl.startsWith('http')) {\n        formattedUrl = 'http://' + formattedUrl;\n    }   \n    \n    // Make sure localhost URLs include port\n    if (formattedUrl.includes('localhost') && !formattedUrl.includes(`:${defaultPort}`)) {\n        formattedUrl = formattedUrl.replace('localhost', `localhost:${defaultPort}`);\n    }\n    \n    console.log('Using custom URL:', formattedUrl);\n    return formattedUrl;\n}\n\n// Configuration object for API\nconst config = {\n    // Access environment variables through process.env (injected by webpack)\n    port: process.env.PORT || 5101,\n    apiUrl: formatUrl(process.env.API_URL, 5101),\n    dashscopeApiKey: process.env.DASHSCOPE_API_KEY,\n    dashscopeUrl: process.env.DASHSCOPE_URL,\n    // Determine the best proxyUrl based on hostname\n    proxyUrl: window.location.hostname === 'baktipm.com' \n        ? 'https://baktipm.com/api/chat' \n        : formatUrl(process.env.PROXY_URL, 5101)\n};\n\n// Create axios instance with default config\nconst api = axios.create({\n    headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n    }\n});\n\n// DOM Elements\nconst chatContainer = document.getElementById('chat-container');\nconst chatMessages = document.getElementById('chat-messages');\nconst userInput = document.getElementById('user-input');\nconst sendButton = document.getElementById('send-button');\nconst chatHistory = document.getElementById('chat-history');\nconst conversationList = document.getElementById('conversation-list');\nconst historyList = document.getElementById('history-list');\nconst emptyHistory = document.getElementById('empty-history');\nconst newChatButton = document.getElementById('new-chat');\nconst connectionStatus = document.getElementById('connection-status');\nconst menuToggle = document.getElementById('menu-toggle');\nconst closeSidebar = document.getElementById('close-sidebar');\nconst loadingElement = document.getElementById('loading');\nconst themeToggle = document.getElementById('theme-toggle');\nconst themeIcon = themeToggle ? themeToggle.querySelector('i') : null;\nconst userButton = document.getElementById('user-button');\nconst userDropdown = document.getElementById('user-dropdown');\nconst userAvatar = document.getElementById('user-avatar');\nconst userName = document.getElementById('user-name');\nconst dropdownUserName = document.getElementById('dropdown-user-name');\nconst userEmail = document.getElementById('user-email');\nconst loginButton = document.getElementById('login-button');\nconst logoutButton = document.getElementById('logout-button');\nconst clearHistoryButton = document.getElementById('clear-history');\n\n// Log DOM elements to console\n// console.log('DOM Elements loaded:', {\n//     chatMessages,\n//     userInput,\n//     sendButton,\n//     connectionStatus,\n//     historyList,\n//     newChatButton,\n//     clearHistoryButton,\n//     emptyHistory,\n//     themeToggle,\n//     themeIcon,\n//     userButton,\n//     userDropdown,\n//     loginButton,\n//     logoutButton,\n//     userAvatar,\n//     userName,\n//     dropdownUserName,\n//     userEmail\n// });\n\n// Function to generate a UUID v4 that's compatible with the backend\nfunction generateId() {\n    // RFC4122 UUID v4 implementation\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        const r = Math.random() * 16 | 0;\n        const v = c === 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\n// Function to format timestamp\nfunction formatTimestamp(date) {\n    const now = new Date();\n    const messageDate = new Date(date);\n    \n    // If today, show time\n    if (messageDate.toDateString() === now.toDateString()) {\n        return messageDate.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    }\n    \n    // If this year, show month and day\n    if (messageDate.getFullYear() === now.getFullYear()) {\n        return messageDate.toLocaleDateString([], { month: 'short', day: 'numeric' });\n    }\n    \n    // Otherwise show full date\n    return messageDate.toLocaleDateString([], { year: 'numeric', month: 'short', day: 'numeric' });\n}\n\n// Function to create a new conversation\nfunction createNewConversation() {\n    const conversation = {\n        id: generateId(),\n        messages: [],\n        timestamp: new Date(),\n        preview: '',\n        topic: 'New Chat'  // Default topic\n    };\n    conversations.unshift(conversation);\n    currentConversationId = conversation.id;\n    saveConversations();\n    updateHistoryList();\n    clearChat();\n\n    // Add welcome message\n    const welcomeMessage = \"👋 Hello! I'm your AI assistant. How can I help you today?\";\n    \n    // Check if the conversation already has messages or if welcome message already exists\n    const hasWelcomeMessage = conversation.messages.some(\n        msg => msg.role === 'assistant' && msg.content === welcomeMessage\n    );\n\n    // Get the current index of this conversation in the array\n    const currentIndex = conversations.findIndex(c => c.id === conversation.id);\n    // console.log(`Current conversation index: ${currentIndex}`);\n\n    if (conversation.messages.length === 0 && !hasWelcomeMessage) {\n        addMessage(welcomeMessage, false);\n        conversation.messages.push({ role: 'assistant', content: welcomeMessage });\n        conversation.preview = welcomeMessage;\n    }\n    saveConversations();\n    updateHistoryList();\n\n    return conversation;\n}\n\n// Function to generate topic from messages\nfunction generateTopic(messages) {\n    if (messages.length === 0) return 'New Chat';\n    // Get the first user message as the topic\n    const firstMessage = messages.find(m => m.role === 'user');\n    if (!firstMessage) return 'New Chat';\n    \n    // Truncate the message to create a topic\n    const topic = firstMessage.content.split('\\n')[0].trim();\n    return topic.length > 40 ? topic.substring(0, 37) + '...' : topic;\n}\n\n// Function to update conversation topic\nfunction updateConversationTopic(conversationId) {\n    const conversation = conversations.find(c => c.id === conversationId);\n    if (conversation) {\n        conversation.topic = generateTopic(conversation.messages);\n        saveConversations();\n        updateHistoryList();\n    }\n}\n\n// Function to clear chat messages\nfunction clearChat() {\n    chatMessages.innerHTML = '';\n    userInput.value = '';\n    userInput.focus();\n}\n\n// Function to save conversations to localStorage\nfunction saveConversations() {\n    localStorage.setItem('conversations', JSON.stringify(conversations));\n    toggleEmptyState();\n}\n\n// Function to validate UUID v4 format\nfunction isValidUUIDv4(id) {\n    const uuidV4Regex = /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n    return uuidV4Regex.test(id);\n}\n\n// Function to load saved conversations from localStorage\nfunction loadConversations() {\n    const saved = localStorage.getItem('conversations');\n    if (saved) {\n        conversations = JSON.parse(saved);\n        \n        // Check if any conversations use old ID format and migrate them\n        let needsMigration = false;\n        conversations.forEach(conv => {\n            if (!isValidUUIDv4(conv.id)) {\n                // If not a valid UUID v4, generate a new one\n                console.log(`Converting old conversation ID ${conv.id} to UUID format`);\n                conv.id = generateId();\n                needsMigration = true;\n            }\n        });\n        \n        // Save back if we made changes\n        if (needsMigration) {\n            console.log('Saving migrated conversation IDs');\n            localStorage.setItem('conversations', JSON.stringify(conversations));\n        }\n        \n        // Set current conversation to the most recent one, if available\n        if (conversations.length > 0) {\n            currentConversationId = conversations[0].id;\n            \n            // Convert stored timestamps back to Date objects\n            conversations.forEach(conv => {\n                conv.timestamp = new Date(conv.timestamp);\n            });\n        }\n    } else {\n        conversations = [];\n    }\n    \n    updateHistoryList();\n    toggleEmptyState();\n}\n\n// Function to toggle empty state\nfunction toggleEmptyState() {\n    if (conversations.length === 0) {\n        emptyHistory.style.display = 'flex';\n    } else {\n        emptyHistory.style.display = 'none';\n    }\n}\n\n// Function to delete conversation\nfunction deleteConversation(id, event) {\n    event.stopPropagation();\n    if (confirm('Are you sure you want to delete this conversation?')) {\n        conversations = conversations.filter(c => c.id !== id);\n        if (id === currentConversationId) {\n            currentConversationId = conversations.length > 0 ? conversations[0].id : null;\n            if (currentConversationId) {\n                loadConversation(currentConversationId);\n            } else {\n                clearChat();\n            }\n        }\n        saveConversations();\n        updateHistoryList();\n    }\n}\n\n// Function to update the history list UI\nfunction updateHistoryList() {\n    historyList.innerHTML = '';\n    \n    if (conversations.length === 0) {\n        historyList.appendChild(emptyHistory);\n        emptyHistory.style.display = 'flex';\n    } else {\n        emptyHistory.style.display = 'none';\n        conversations.forEach(conv => {\n            const item = document.createElement('div');\n            item.className = 'history-item';\n            if (conv.id === currentConversationId) {\n                item.classList.add('active');\n                // console.log('Current conversation:', conv);\n            }\n            \n            const header = document.createElement('div');\n            header.className = 'history-item-header';\n            \n            const topic = document.createElement('div');\n            topic.className = 'topic';\n            topic.textContent = conv.topic || 'New Chat';\n            \n            const timestamp = document.createElement('div');\n            timestamp.className = 'timestamp';\n            timestamp.textContent = formatTimestamp(conv.timestamp);\n            \n            const preview = document.createElement('div');\n            preview.className = 'preview';\n            preview.textContent = conv.preview || 'Empty conversation';\n            \n            const actions = document.createElement('div');\n            actions.className = 'actions';\n            \n            const deleteBtn = document.createElement('button');\n            deleteBtn.className = 'delete-btn';\n            deleteBtn.innerHTML = '<i class=\"ri-delete-bin-line\"></i>';\n            deleteBtn.title = 'Delete conversation';\n            deleteBtn.onclick = (e) => deleteConversation(conv.id, e);\n            \n            header.appendChild(topic);\n            header.appendChild(deleteBtn);\n            \n            item.appendChild(header);\n            item.appendChild(timestamp);\n            item.appendChild(preview);\n            \n            item.addEventListener('click', () => loadConversation(conv.id));\n            historyList.appendChild(item);\n        });\n    }\n}\n\n// Function to load a specific conversation\nfunction loadConversation(conversationId) {\n    currentConversationId = conversationId;\n    const conversation = conversations.find(c => c.id === conversationId);\n    if (conversation) {\n        chatMessages.innerHTML = '';\n        conversation.messages.forEach(msg => {\n            addMessage(msg.content, msg.role === 'user', false);\n        });\n        updateHistoryList();\n    }\n}\n\n// Function to update connection status\nfunction updateConnectionStatus(message, type = '') {\n    // Status update handling\n    connectionStatus.textContent = message;\n    connectionStatus.className = 'connection-status ' + type;\n}\n\n// Configure marked with options\nmarked.setOptions({\n    highlight: function(code, lang) {\n        const language = hljs.getLanguage(lang) ? lang : 'plaintext';\n        return hljs.highlight(code, { language }).value;\n    },\n    langPrefix: 'hljs language-',\n    gfm: true,\n    breaks: true\n});\n\n// Function to create a message element\nfunction createMessageElement(content, isUser) {\n    const messageDiv = document.createElement('div');\n    messageDiv.className = `message ${isUser ? 'user-message' : 'bot-message'}`;\n\n    const avatarDiv = document.createElement('div');\n    avatarDiv.className = 'avatar';\n    avatarDiv.innerHTML = isUser ? '<i class=\"ri-user-line\"></i>' : '<i class=\"ri-robot-line\"></i>';\n\n    const contentDiv = document.createElement('div');\n    contentDiv.className = 'message-content';\n    \n    if (isUser) {\n        contentDiv.textContent = content;\n    } else {\n        // For bot messages, render as Markdown\n        contentDiv.innerHTML = marked.parse(content);\n        // Highlight any code blocks\n        contentDiv.querySelectorAll('pre code').forEach((block) => {\n            hljs.highlightBlock(block);\n        });\n    }\n\n    messageDiv.appendChild(avatarDiv);\n    messageDiv.appendChild(contentDiv);\n\n    return { messageDiv, contentDiv };\n}\n\n// Function to add a message to the chat\nfunction addMessage(content, isUser, save = true) {\n    const { messageDiv, contentDiv } = createMessageElement(content, isUser);\n    chatMessages.appendChild(messageDiv);\n    chatMessages.scrollTop = chatMessages.scrollHeight;\n    \n    if (save) {\n        if (!currentConversationId) {\n            createNewConversation();\n        }\n        \n        const conversation = conversations.find(c => c.id === currentConversationId);\n        if (conversation) {\n            conversation.messages.push({ role: isUser ? 'user' : 'assistant', content });\n            conversation.preview = content;\n            conversation.timestamp = new Date();\n            // Update topic after adding first user message\n            if (isUser && conversation.messages.filter(m => m.role === 'user').length === 1) {\n                updateConversationTopic(currentConversationId);\n            }\n            saveConversations();\n            updateHistoryList();\n        }\n    }\n}\n\n// Function to show typing indicator\nfunction showTypingIndicator() {\n    // Show typing indicator\n    const typingDiv = document.createElement('div');\n    typingDiv.className = 'typing-indicator';\n    typingDiv.id = 'typing-indicator';\n    \n    const avatar = document.createElement('div');\n    avatar.className = 'message-avatar';\n    avatar.innerHTML = '<i class=\"ri-robot-line\"></i>';\n    \n    const bubble = document.createElement('div');\n    bubble.className = 'typing-bubble';\n    \n    for (let i = 0; i < 3; i++) {\n        const dot = document.createElement('div');\n        dot.className = 'typing-dot';\n        bubble.appendChild(dot);\n    }\n    \n    typingDiv.appendChild(avatar);\n    typingDiv.appendChild(bubble);\n    chatMessages.appendChild(typingDiv);\n    chatMessages.scrollTop = chatMessages.scrollHeight;\n}\n\n// Function to remove typing indicator\nfunction removeTypingIndicator() {\n    // Remove typing indicator\n    const typingIndicator = document.getElementById('typing-indicator');\n    if (typingIndicator) {\n        typingIndicator.remove();\n    }\n}\n\n// Function to send message to API\nasync function sendToAPI(message) {\n    try {\n        // Send message to API\n        updateConnectionStatus('Connecting...', '');\n        \n        // The config.proxyUrl is already formatted with the formatUrl utility\n        const apiEndpoint = config.proxyUrl;\n        \n        // Get authentication token\n        const token = localStorage.getItem('token');\n        if (!token) {\n            throw new Error('Authentication required. Please login again.');\n        }\n        \n        // Create event source for streaming\n        const response = await fetch(apiEndpoint, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({ \n                message,\n                conversationId: currentConversationId // Include conversation ID in the request\n            })\n        });\n\n        // Create a reader to read the stream\n        const reader = response.body.getReader();\n        const decoder = new TextDecoder();\n        let buffer = '';\n\n        updateConnectionStatus('Connected', 'connected');\n\n        // Return a promise that resolves with an array of all responses\n        return new Promise(async (resolve, reject) => {\n            try {\n                let fullResponse = '';\n                \n                while (true) {\n                    const { done, value } = await reader.read();\n                    \n                    if (done) {\n                        break;\n                    }\n\n                    // Decode the chunk and add to buffer\n                    buffer += decoder.decode(value, { stream: true });\n                    \n                    // Process complete events\n                    let newlineIndex;\n                    while ((newlineIndex = buffer.indexOf('\\n\\n')) !== -1) {\n                        const event = buffer.slice(0, newlineIndex);\n                        buffer = buffer.slice(newlineIndex + 2);\n\n                        // Parse the event\n                        const lines = event.split('\\n');\n                        for (const line of lines) {\n                            if (!line.startsWith('data:')) continue;\n                            \n                            const data = line.slice(5).trim();\n                            if (!data) continue;\n                            \n                            if (data === '[DONE]') {\n                                resolve({\n                                    choices: [{\n                                        message: {\n                                            content: fullResponse\n                                        }\n                                    }]\n                                });\n                                return;\n                            }\n\n                            try {\n                                const parsedData = JSON.parse(data);\n                                if (parsedData.error) {\n                                    throw new Error(parsedData.error);\n                                }\n                                // Handle different API response formats\n                                let content = '';\n                                \n                                // Check for different response formats\n                                if (parsedData.choices?.[0]?.message?.content) {\n                                    // OpenAI-like format\n                                    content = parsedData.choices[0].message.content;\n                                } else if (parsedData.output?.text) {\n                                    // DashScope format\n                                    content = parsedData.output.text;\n                                } else if (parsedData.text) {\n                                    // Simple format\n                                    content = parsedData.text;\n                                } else if (parsedData.content) {\n                                    // Another common format\n                                    content = parsedData.content;\n                                } else {\n                                    // Handle unknown response format\n                                    // Try to extract any string we can find\n                                    content = JSON.stringify(parsedData);\n                                }\n                                \n                                if (content && content.trim()) {\n                                    fullResponse += content;\n                                    // Emit partial response for real-time updates\n                                    window.dispatchEvent(new CustomEvent('partialResponse', {\n                                        detail: { content }\n                                    }));\n                                }\n                            } catch (e) {\n                                if (!data.startsWith('id:')) {  // Ignore ID lines\n                                    // Silently handle parsing errors\n                                }\n                            }\n                        }\n                    }\n                }\n            } catch (error) {\n                reject(error);\n            }\n        });\n    } catch (error) {\n        // Handle API errors silently\n        // Update UI with error message\n        updateConnectionStatus(`Error: ${error.response?.data?.message || error.message}`, 'error');\n        throw error;\n    }\n}\n\n// Function to handle sending messages\nasync function handleSendMessage() {\n    const message = userInput.value.trim();\n    if (!message) {\n        alert(\"Please enter a message before sending.\");\n        return;\n    }\n    \n    // Check if we have a current conversation, if not create one\n    if (!currentConversationId || !conversations.find(c => c.id === currentConversationId)) {\n        // Create a new conversation automatically\n        const newConversation = createNewConversation();\n        currentConversationId = newConversation.id;\n    }\n    \n    // Process new message\n    \n    // Clear input\n    userInput.value = '';\n\n    // Add user message to chat\n    addMessage(message, true);\n\n    // Show typing indicator\n    showTypingIndicator();\n\n    try {\n        // Remove typing indicator before creating new message\n        removeTypingIndicator();\n\n        // Create a temporary message element for streaming updates\n        const tempMessageId = 'temp-' + Date.now();\n        const { messageDiv, contentDiv } = createMessageElement('', false);\n        contentDiv.id = tempMessageId;\n        chatMessages.appendChild(messageDiv);\n        chatMessages.scrollTop = chatMessages.scrollHeight;\n\n        let accumulatedMarkdown = '';\n\n        // Listen for partial responses\n        const handlePartialResponse = (event) => {\n            const content = event.detail.content;\n            accumulatedMarkdown += content;\n            const messageElement = document.getElementById(tempMessageId);\n            \n            if (messageElement) {\n                messageElement.textContent = accumulatedMarkdown;\n                \n                try {\n                    messageElement.innerHTML = marked.parse(accumulatedMarkdown);\n                    messageElement.querySelectorAll('pre code').forEach((block) => {\n                        hljs.highlightBlock(block);\n                    });\n                } catch (e) {\n                    // Silent fail on markdown parsing errors\n                }\n                \n                chatMessages.scrollTop = chatMessages.scrollHeight;\n            } else {\n                // Silent fail if element not found (element might not be in DOM yet)\n                // This prevents console error messages\n            }\n        };\n        window.addEventListener('partialResponse', handlePartialResponse);\n\n        // Send message to API\n        const response = await sendToAPI(message);\n        \n        // Remove event listener\n        window.removeEventListener('partialResponse', handlePartialResponse);\n\n        // Update the final message\n        // Extract the response content based on its format\n        let botResponse = '';\n        \n        if (response) {\n            // Process full API response\n            \n            // Handle different API response formats\n            if (response.choices && response.choices[0] && response.choices[0].message) {\n                // OpenAI-like format\n                botResponse = response.choices[0].message.content;\n            } else if (response.output && response.output.text) {\n                // DashScope format\n                botResponse = response.output.text;\n            } else if (response.text) {\n                // Simple format\n                botResponse = response.text;\n            } else if (response.content) {\n                // Another common format\n                botResponse = response.content;\n            } else {\n                // If we can't find a known format, use the accumulated markdown\n                botResponse = accumulatedMarkdown;\n            }\n            \n            // Use extracted bot response\n            \n            const messageElement = document.getElementById(tempMessageId);\n            if (messageElement) {\n                try {\n                    messageElement.innerHTML = marked.parse(botResponse);\n                    // Highlight any code blocks\n                    messageElement.querySelectorAll('pre code').forEach((block) => {\n                        hljs.highlightBlock(block);\n                    });\n                } catch (e) {\n                    // Silent fail on final markdown parsing error\n                    // Fallback to plain text\n                    messageElement.textContent = botResponse;\n                }\n            } else {\n                // Silent fail if element not found in final response handling\n                // This prevents console error messages\n            }\n            chatMessages.scrollTop = chatMessages.scrollHeight;\n\n            // Save the bot's response to conversation history\n            const conversation = conversations.find(c => c.id === currentConversationId);\n            if (conversation) {\n                conversation.messages.push({ role: 'assistant', content: botResponse });\n                conversation.preview = botResponse;\n                conversation.timestamp = new Date();\n                saveConversations();\n                updateHistoryList();\n            }\n        } else {\n            throw new Error('Invalid API response format');\n        }\n    } catch (error) {\n        console.error('Chat error:', error);\n        removeTypingIndicator();\n        addMessage('Sorry, I encountered an error. Please try again later.', false);\n    }\n}\n\n// Function to clear all history\n// function clearAllHistory() {\n//     if (confirm('Are you sure you want to clear all chat history? This cannot be undone.')) {\n//         conversations = [];\n//         currentConversationId = null;\n//         localStorage.removeItem('conversations');\n//         clearChat();\n//         updateHistoryList();\n//         toggleEmptyState();\n//         // // Create a new conversation after clearing\n//         // createNewConversation();\n//     }\n// }\n\n// Theme management\nfunction getPreferredTheme() {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n        return savedTheme;\n    }\n    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n}\n\nfunction updateThemeIcon(theme) {\n    const isDark = theme === 'dark';\n    if (themeIcon) {\n        themeIcon.className = isDark ? 'ri-sun-line' : 'ri-moon-line';\n    }\n    if (themeToggle) {\n        themeToggle.setAttribute('title', `Switch to ${isDark ? 'light' : 'dark'} mode`);\n        themeToggle.setAttribute('aria-label', `Switch to ${isDark ? 'light' : 'dark'} mode`);\n    }\n}\n\nfunction setTheme(theme, updateStorage = true) {\n    // Make sure we have a string value, not a promise\n    const themeValue = typeof theme === 'string' ? theme : 'system';\n    \n    document.documentElement.style.setProperty('--transition-normal', 'none');\n    document.body.classList.remove('light-theme', 'dark-theme');\n    \n    requestAnimationFrame(() => {\n        // Ensure we're adding a valid class name\n        document.body.classList.add(`${themeValue}-theme`);\n        document.documentElement.style.setProperty('--transition-normal', 'all 0.3s ease');\n        \n        if (updateStorage) {\n            localStorage.setItem('theme', themeValue);\n        }\n        \n        updateThemeIcon(themeValue);\n    });\n}\n\n// Initialize theme with proper type checking to avoid Promise errors\nconst initialTheme = getPreferredTheme();\nif (typeof initialTheme === 'string') {\n    setTheme(initialTheme, false);\n} else if (initialTheme instanceof Promise) {\n    // If it's a promise, wait for it to resolve\n    initialTheme.then(theme => setTheme(theme || 'system', false))\n              .catch(() => setTheme('system', false));\n} else {\n    // Fallback to system theme\n    setTheme('system', false);\n}\n\n// Theme toggle event listener\naddSafeEventListener(themeToggle, 'click', () => {\n    const currentTheme = localStorage.getItem('theme') || getPreferredTheme();\n    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';\n    setTheme(newTheme);\n});\n\n// Watch for system theme changes\nconst mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\nif (mediaQuery) {\n    mediaQuery.addEventListener('change', (e) => {\n        if (!localStorage.getItem('theme')) {\n            setTheme(e.matches ? 'dark' : 'light', false);\n        }\n    });\n}\n\n// Mobile menu toggle\naddSafeEventListener(menuToggle, 'click', () => {\n    if (chatHistory) {\n        chatHistory.classList.toggle('show');\n    }\n});\n\n// Close sidebar button\naddSafeEventListener(closeSidebar, 'click', () => {\n    if (chatHistory) {\n        chatHistory.classList.remove('show');\n    }\n});\n\n// Close menu when clicking outside on mobile\ndocument.addEventListener('click', (e) => {\n    if (window.innerWidth <= 768) {\n        const isClickInsideHistory = chatHistory.contains(e.target);\n        const isClickOnToggle = menuToggle.contains(e.target);\n        \n        if (!isClickInsideHistory && !isClickOnToggle && chatHistory.classList.contains('show')) {\n            chatHistory.classList.remove('show');\n        }\n    }\n});\n\n// User Account Management\naddSafeEventListener(userButton, 'click', () => {\n    if (userDropdown) {\n        userDropdown.classList.toggle('hidden');\n    }\n});\n\n// Document-level event listener for click outside dropdown\nif (document) {\n    document.addEventListener('click', (e) => {\n        if (userButton && userDropdown && \n            !userButton.contains(e.target) && \n            !userDropdown.contains(e.target)) {\n            userDropdown.classList.add('hidden');\n        }\n    });\n}\n\n// Login button functionality\naddSafeEventListener(loginButton, 'click', () => {\n    window.location.href = 'account.html';\n});\n\n// Logout button functionality\naddSafeEventListener(logoutButton, 'click', () => {\n    if (confirm('Are you sure you want to sign out?')) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        updateUserInterface();\n        window.location.href = 'account.html';\n    }\n});\n\nfunction updateUserInterface() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    const isAuthenticated = !!localStorage.getItem('token');\n\n    if (isAuthenticated && user) {\n        // Update avatar\n        const avatarUrl = user.avatar || `https://ui-avatars.com/api/?name=${encodeURIComponent(user.name)}&background=7c3aed&color=fff`;\n        userAvatar.src = avatarUrl;\n        document.querySelector('.user-info img').src = avatarUrl;\n\n        // Update name and email with safety checks\n        if (userName) userName.textContent = user.name;\n        if (dropdownUserName) dropdownUserName.textContent = user.name;\n        if (userEmail) userEmail.textContent = user.email;\n\n        // Show/hide buttons with safety checks\n        if (loginButton) loginButton.classList.add('hidden');\n        if (logoutButton) logoutButton.classList.remove('hidden');\n    } else {\n        // Reset to guest state\n        const guestAvatar = 'https://ui-avatars.com/api/?name=Guest&background=7c3aed&color=fff';\n        userAvatar.src = guestAvatar;\n        document.querySelector('.user-info img').src = guestAvatar;\n\n        userName.textContent = 'Guest';\n        dropdownUserName.textContent = 'Guest';\n        userEmail.textContent = 'Not signed in';\n\n        loginButton.classList.remove('hidden');\n        logoutButton.classList.add('hidden');\n    }\n}\n\nupdateUserInterface();\n\n// Helper function to safely add event listeners\nfunction addSafeEventListener(element, eventType, handler) {\n    if (element) {\n        element.addEventListener(eventType, handler);\n    } else {\n        console.error(`Element for event ${eventType} not found`);\n    }\n}\n\n// Event listeners - with safety checks\naddSafeEventListener(sendButton, 'click', handleSendMessage);\naddSafeEventListener(newChatButton, 'click', createNewConversation);\naddSafeEventListener(clearHistoryButton, 'click', clearAllHistory);\n\nif (userInput) {\n    userInput.addEventListener('keypress', (e) => {\n        if (e.key === 'Enter') {\n            handleSendMessage();\n        }\n    });\n} else {\n    console.error('User input element not found');\n}\n\n// Function to clear all conversation history with confirmation\nfunction clearAllHistory() {\n    if (confirm('Are you sure you want to delete all conversation history? This action cannot be undone.')) {\n        const userId = getUserId();\n        \n        if (userId) {\n            // For logged in users, call API to delete conversations from database\n            fetch('/api/conversations/clear', {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            })\n            .then(response => {\n                if (response.ok) {\n                    // Clear local conversations\n                    conversations = [];\n                    saveConversations();\n                    updateHistoryList();\n                    createNewConversation(); // Create a fresh conversation\n                    return response.json();\n                }\n                throw new Error('Failed to clear conversation history');\n            })\n            .then(data => {\n                console.log('Cleared history:', data);\n            })\n            .catch(error => {\n                console.error('Error clearing history:', error);\n                alert('Failed to clear conversation history. Please try again.');\n            });\n        } else {\n            // For anonymous users, just clear local storage\n            conversations = [];\n            saveConversations();\n            updateHistoryList();\n            createNewConversation(); // Create a fresh conversation\n        }\n    }\n}\n\n// Helper function to get user ID if logged in\nfunction getUserId() {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return user ? user.id : null;\n}\n\n// Load conversations on startup\nloadConversations();\n\n// Add initial greeting only if there are no existing conversations\nif (conversations.length === 0) {\n    // Create a new conversation but prevent duplicate welcome messages\n    const newConversation = {\n        id: generateId(),\n        messages: [],\n        timestamp: new Date(),\n        preview: '',\n        topic: 'New Chat'\n    };\n    \n    conversations.unshift(newConversation);\n    currentConversationId = newConversation.id;\n    \n    // Add welcome message only once\n    const welcomeMessage = \"👋 Hello! I'm your AI assistant. How can I help you today?\";\n    addMessage(welcomeMessage, false);\n    newConversation.messages.push({ role: 'assistant', content: welcomeMessage });\n    newConversation.preview = welcomeMessage;\n    saveConversations();\n    updateHistoryList();\n    clearChat();\n}\n"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_regeneratorDefine","enumerable","configurable","writable","_invoke","_createForOfIteratorHelper","Array","isArray","_unsupportedIterableToArray","_n","F","s","next","_arrayLikeToArray","toString","slice","constructor","name","from","test","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","checkSession","token","localStorage","getItem","user","window","location","href","Error","conversations","currentConversationId","formatUrl","url","defaultPort","undefined","hostname","apiEndpoint","baseUrl","console","log","concat","formattedUrl","startsWith","includes","replace","config","port","process","env","PORT","apiUrl","API_URL","dashscopeApiKey","DASHSCOPE_API_KEY","dashscopeUrl","DASHSCOPE_URL","proxyUrl","PROXY_URL","api","axios","headers","chatContainer","document","getElementById","chatMessages","userInput","sendButton","chatHistory","conversationList","historyList","emptyHistory","newChatButton","connectionStatus","menuToggle","closeSidebar","loadingElement","themeToggle","themeIcon","querySelector","userButton","userDropdown","userAvatar","userName","dropdownUserName","userEmail","loginButton","logoutButton","clearHistoryButton","generateId","Math","random","formatTimestamp","date","now","Date","messageDate","toDateString","toLocaleTimeString","hour","minute","getFullYear","toLocaleDateString","month","day","year","createNewConversation","conversation","id","messages","timestamp","preview","topic","unshift","saveConversations","updateHistoryList","clearChat","welcomeMessage","hasWelcomeMessage","some","msg","role","content","currentIndex","findIndex","addMessage","push","generateTopic","firstMessage","find","split","trim","substring","updateConversationTopic","conversationId","innerHTML","focus","setItem","JSON","stringify","toggleEmptyState","isValidUUIDv4","uuidV4Regex","loadConversations","saved","parse","needsMigration","forEach","conv","style","display","deleteConversation","event","stopPropagation","confirm","filter","loadConversation","appendChild","item","createElement","className","classList","add","header","textContent","actions","deleteBtn","title","onclick","addEventListener","updateConnectionStatus","message","type","marked","setOptions","highlight","code","lang","language","hljs","getLanguage","langPrefix","gfm","breaks","createMessageElement","isUser","messageDiv","avatarDiv","contentDiv","querySelectorAll","block","highlightBlock","save","_createMessageElement","scrollTop","scrollHeight","showTypingIndicator","typingDiv","avatar","bubble","dot","removeTypingIndicator","typingIndicator","remove","sendToAPI","_x","_sendToAPI","_callee2","response","reader","decoder","buffer","_error$response","_t4","_context2","fetch","method","body","getReader","TextDecoder","_ref","_callee","reject","fullResponse","_yield$reader$read","newlineIndex","lines","_iterator","_step","line","data","_parsedData$choices","_parsedData$output","parsedData","_t","_t2","_t3","_context","read","decode","stream","indexOf","choices","error","output","text","dispatchEvent","CustomEvent","detail","_x2","_x3","handleSendMessage","_handleSendMessage","_callee3","_newConversation","tempMessageId","_createMessageElement2","accumulatedMarkdown","handlePartialResponse","botResponse","messageElement","_t5","_context3","alert","newConversation","removeEventListener","getPreferredTheme","savedTheme","matchMedia","matches","updateThemeIcon","theme","isDark","setAttribute","setTheme","updateStorage","themeValue","documentElement","setProperty","requestAnimationFrame","initialTheme","addSafeEventListener","currentTheme","newTheme","mediaQuery","toggle","innerWidth","isClickInsideHistory","contains","target","isClickOnToggle","removeItem","updateUserInterface","isAuthenticated","avatarUrl","encodeURIComponent","src","email","guestAvatar","element","eventType","handler","clearAllHistory","key","userId","getUserId","ok","json"],"sourceRoot":""}