{"version":3,"file":"account.bundle.js","mappings":"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","sources":["webpack://dashscope-chatbot/./src/account.js"],"sourcesContent":["// DOM Elements\n// API Configuration\nconst API_BASE_URL = 'http://localhost:5101';\n\n// DOM Elements\nconst loginForm = document.getElementById('login-form');\nconst registerForm = document.getElementById('register-form');\nconst profileForm = document.getElementById('profile-form');\nconst themeButton = document.getElementById('theme-button');\nconst themeDropdown = document.getElementById('theme-dropdown');\nconst themeIcon = document.getElementById('theme-icon');\nconst themeOptions = document.querySelectorAll('.theme-option');\n\n// Show/Hide forms\nfunction showForm(formType) {\n    loginForm.classList.add('hidden');\n    registerForm.classList.add('hidden');\n    profileForm.classList.add('hidden');\n\n    switch (formType) {\n        case 'login':\n            loginForm.classList.remove('hidden');\n            break;\n        case 'register':\n            registerForm.classList.remove('hidden');\n            break;\n        case 'profile':\n            profileForm.classList.remove('hidden');\n            break;\n    }\n}\n\n// Toggle password visibility\ndocument.querySelectorAll('.toggle-password').forEach(button => {\n    button.addEventListener('click', () => {\n        const input = button.parentElement.querySelector('input');\n        const icon = button.querySelector('i');\n        \n        if (input.type === 'password') {\n            input.type = 'text';\n            icon.className = 'ri-eye-line';\n        } else {\n            input.type = 'password';\n            icon.className = 'ri-eye-off-line';\n        }\n    });\n});\n\n// Theme management\nfunction getPreferredTheme() {\n    // Get theme preference from localStorage or API\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n        return savedTheme;\n    }\n    \n    // Default to system theme if no saved preference\n    return 'system';\n}\n\nfunction getEffectiveTheme(theme) {\n    if (theme === 'system') {\n        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    }\n    return theme;\n}\n\nfunction updateThemeIcon(theme) {\n    const effectiveTheme = getEffectiveTheme(theme);\n    themeIcon.className = effectiveTheme === 'dark' ? 'ri-moon-line' : 'ri-sun-line';\n}\n\nfunction updateActiveTheme(theme) {\n    themeOptions.forEach(option => {\n        if (option.dataset.theme === theme) {\n            option.classList.add('active');\n        } else {\n            option.classList.remove('active');\n        }\n    });\n}\n\nfunction setTheme(theme, updateStorage = true) {\n    // Make sure we have a string value, not a promise\n    const themeValue = typeof theme === 'string' ? theme : 'system';\n    const effectiveTheme = getEffectiveTheme(themeValue);\n    \n    document.documentElement.style.setProperty('--transition-normal', 'none');\n    document.body.classList.remove('light-theme', 'dark-theme');\n    \n    requestAnimationFrame(() => {\n        // Ensure effectiveTheme is a string\n        const themeClass = `${effectiveTheme}-theme`;\n        document.body.classList.add(themeClass);\n        document.documentElement.style.setProperty('--transition-normal', 'all 0.3s ease');\n        \n        if (updateStorage) {\n            localStorage.setItem('theme', themeValue);\n        }\n        \n        updateThemeIcon(themeValue);\n        updateActiveTheme(themeValue);\n    });\n}\n\n// Theme dropdown toggle\nthemeButton.addEventListener('click', () => {\n    themeDropdown.classList.toggle('hidden');\n});\n\n// Close theme dropdown when clicking outside\ndocument.addEventListener('click', (e) => {\n    if (!themeButton.contains(e.target) && !themeDropdown.contains(e.target)) {\n        themeDropdown.classList.add('hidden');\n    }\n});\n\n// Theme option selection\nthemeOptions.forEach(option => {\n    option.addEventListener('click', () => {\n        const theme = option.dataset.theme;\n        setTheme(theme);\n        themeDropdown.classList.add('hidden');\n    });\n});\n\n// Watch for system theme changes\nconst mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\nmediaQuery.addEventListener('change', (e) => {\n    const currentTheme = localStorage.getItem('theme') || 'system';\n    if (currentTheme === 'system') {\n        setTheme('system', false);\n    }\n});\n\n// Initialize theme with string value to avoid Promise issues\nconst initialTheme = getPreferredTheme();\nif (typeof initialTheme === 'string') {\n    setTheme(initialTheme, false);\n} else if (initialTheme instanceof Promise) {\n    // If it's a promise, wait for it to resolve\n    initialTheme.then(theme => setTheme(theme || 'system', false))\n              .catch(() => setTheme('system', false));\n} else {\n    // Fallback to system theme\n    setTheme('system', false);\n}\n\n// Form submissions\nloginForm.addEventListener('submit', async (e) => {\n    e.preventDefault();\n    const email = document.getElementById('login-email').value;\n    const password = document.getElementById('login-password').value;\n    \n    try {\n        // Make login API call with absolute URL\n        const response = await fetch(`${API_BASE_URL}/api/auth/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ email, password })\n        });\n        \n        if (!response.ok) {\n            throw new Error(`Login failed: ${response.status}`);\n        }\n        \n        const data = await response.json();\n        \n        // Store user data and token\n        localStorage.setItem('user', JSON.stringify(data.user));\n        localStorage.setItem('token', data.token);\n        \n        // Redirect to chat\n        window.location.href = 'index.html';\n    } catch (error) {\n        console.error('Login error:', error);\n        alert('Login failed. Please try again.');\n    }\n});\n\nregisterForm.addEventListener('submit', async (e) => {\n    e.preventDefault();\n    const name = document.getElementById('register-name').value;\n    const email = document.getElementById('register-email').value;\n    const password = document.getElementById('register-password').value;\n    const confirmPassword = document.getElementById('register-confirm-password').value;\n    \n    if (password !== confirmPassword) {\n        alert('Passwords do not match');\n        return;\n    }\n    \n    try {\n        // TODO: Implement registration API call\n        console.log('Register:', { name, email, password });\n        showForm('login');\n    } catch (error) {\n        console.error('Registration error:', error);\n    }\n});\n\nprofileForm.addEventListener('submit', async (e) => {\n    e.preventDefault();\n    const name = document.getElementById('profile-name').value;\n    const currentPassword = document.getElementById('profile-current-password').value;\n    const newPassword = document.getElementById('profile-new-password').value;\n    \n    try {\n        // TODO: Implement profile update API call\n        console.log('Update profile:', { name, currentPassword, newPassword });\n    } catch (error) {\n        console.error('Profile update error:', error);\n    }\n});\n\n// Logout function\nfunction logout() {\n    if (confirm('Are you sure you want to logout?')) {\n        // Clear authentication data\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        \n        // Redirect to login page - fixed incorrect function call syntax\n        window.location.href = 'account.html';\n    }\n}\n\n// Check authentication status on page load\nfunction checkAuth() {\n    const token = localStorage.getItem('token');\n    if (token) {\n        // TODO: Validate token and load user data\n        showForm('profile');\n    } else {\n        showForm('login');\n    }\n}\n\n// Initialize page\ncheckAuth();\n"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","loginForm","document","getElementById","registerForm","profileForm","themeButton","themeDropdown","themeIcon","themeOptions","querySelectorAll","showForm","formType","classList","add","remove","getEffectiveTheme","theme","window","matchMedia","matches","setTheme","updateStorage","undefined","themeValue","effectiveTheme","documentElement","style","setProperty","body","requestAnimationFrame","themeClass","concat","localStorage","setItem","className","updateThemeIcon","forEach","option","dataset","updateActiveTheme","button","addEventListener","input","parentElement","querySelector","icon","type","toggle","contains","target","getItem","initialTheme","_ref","_callee","email","password","response","data","_t","_context","preventDefault","fetch","method","headers","JSON","stringify","ok","Error","status","json","user","token","location","href","console","error","alert","_x","_ref2","_callee2","name","confirmPassword","_context2","log","_x2","_ref3","_callee3","currentPassword","newPassword","_context3","_x3"],"sourceRoot":""}